// This is your db schema file,
// learn more about it in the docs: https://pris.ly/d/db-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  reports       Report[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Report {
  id                String            @id @default(cuid())
  userId            String            @map("user_id")
  latitude          Float
  longitude         Float
  location_name     String?
  category          ReportCategory    // Changed from String to enum
  tags              String[]
  severity_level    Int
  description       String            @db.Text
  media             String[]
  ai_summary        String            @default("") @db.Text
  credibility_score Int               @default(50)
  auto_tagged_risk  String?
  status            ReportStatus      @default(ACTIVE)    // Changed from String to enum
  verification_status VerificationStatus @default(UNVERIFIED) // New enum
  verifiedBy        String?
  pulse_relevance   Float             @default(0.0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  user              User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([latitude, longitude])
  @@map("reports")
}

enum ReportCategory {
  EMERGENCY
  HAZARD
  INFRASTRUCTURE
  ENVIRONMENTAL
  OTHER
}

enum ReportStatus {
  ACTIVE
  RESOLVED
  ARCHIVED
  DELETED
}

enum VerificationStatus {
  UNVERIFIED
  PENDING
  VERIFIED
  REJECTED
}